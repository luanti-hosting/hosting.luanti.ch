version: "2"

services:
 postgres:
  image: postgres:17.2
  restart: always
  shm_size: '2gb'
  environment:
   POSTGRES_PASSWORD: enter
  volumes:
   - "./data/postgres:/var/lib/postgresql/data"
  command:
   - "postgres"
   - "-c"
   - "shared_buffers=4GB"
   - "-c"
   - "synchronous_commit=off"
  logging:
   options:
    max-size: 50m

 mt-hosting-active: &hosting
  image: ghcr.io/luanti-hosting/mt-hosting-manager:latest
  restart: always
  working_dir: /data
  stop_grace_period: 5m
  environment:
   - ENABLE_WORKER=true
  depends_on:
   - postgres
  networks:
   - default
   - terminator
  env_file:
   - private.env
   - .env
  volumes:
   - "./data:/data"
   - "./id_rsa:/id_rsa"

 mt-hosting-passive:
  <<: *hosting
  environment:
   - ENABLE_WORKER=false

 haproxy:
  image: haproxy:3.2.2
  networks:
   - terminator
   - default
  restart: always
  depends_on:
   - mt-hosting-active
   - mt-hosting-passive
  labels:
    - "traefik.enable=true"
    - "traefik.docker.network=terminator"
    - "traefik.http.routers.luanti-hosting.rule=Host(`hosting.luanti.ch`)"
    - "traefik.http.services.luanti-hosting.loadbalancer.server.port=80"
    - "traefik.http.routers.luanti-hosting.entrypoints=websecure"
    - "traefik.http.routers.luanti-hosting.tls.certresolver=default"
  volumes:
   - "./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro"
  logging:
   options:
    max-size: 50m

 redirect:
  image: nginx:1.29.0
  networks:
   - terminator
   - default
  restart: always
  labels:
    - "traefik.enable=true"
    - "traefik.docker.network=terminator"
    - "traefik.http.routers.minetest-hosting.rule=Host(`hosting.minetest.ch`)"
    - "traefik.http.services.minetest-hosting.loadbalancer.server.port=80"
    - "traefik.http.routers.minetest-hosting.entrypoints=websecure"
    - "traefik.http.routers.minetest-hosting.tls.certresolver=default"
  volumes:
   - "./redirect.conf:/etc/nginx/conf.d/default.conf:ro"

networks:
 terminator:
  external: true
